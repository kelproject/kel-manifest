apiVersion: v1
kind: Service
metadata:
  name: api-web
  namespace: kel-system
  labels:
    kelproject.com/cluster-service: "true"
    kelproject.com/name: api-web
spec:
  selector:
    kelproject.com/name: api-web
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8000

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: api-web-config
  namespace: kel-system
data:
  cluster-name: "{{ cluster.config.name }}"
  cluster-api-host: "{{ cluster.config["layer-1"].api.host }}"
  cluster-domain: "{{ cluster.config.domain }}"
  identity-url: "{{ cluster.config["layer-1"]["identity-url"] }}"
  blobstore-backend: "{{ cluster.config["layer-1"]["blobstore-backend"] }}"
  blobstore-bucket: "{{ cluster.config["layer-1"]["blobstore-bucket"] }}"

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: api-web
  namespace: kel-system
  labels:
    kelproject.com/name: api-web
    version: {{ version }}
spec:
  replicas: {{ replicas }}
  selector:
    matchLabels:
      kelproject.com/name: api-web
  template:
    metadata:
      labels:
        kelproject.com/name: api-web
        version: {{ version }}
    spec:
      containers:
      - name: api-web
        image: {{ image }}
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 100m
            memory: 476Mi
        args:
          - start
          - web
        env:
          - name: BUNDLE_URL
            value: https://storage.googleapis.com/release.kelproject.com/bundles/api/api-{{ bundle }}.tgz
          - name: PORT
            value: "8000"
          - name: DJANGO_SETTINGS_MODULE
            value: kel.api.settings_production
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: api-web-secrets
                key: database-url
          - name: REDIS_URL
            valueFrom:
              secretKeyRef:
                name: api-web-secrets
                key: redis-url
          - name: SECRET_KEY
            value: changeme
          - name: KEL_LOG_LEVEL
            value: INFO
          - name: KEL_CLUSTER_NAME
            valueFrom:
              configMapKeyRef:
                name: api-web-config
                key: cluster-name
          - name: KEL_CLUSTER_API_HOST
            valueFrom:
              configMapKeyRef:
                name: api-web-config
                key: cluster-api-host
          - name: KEL_CLUSTER_DOMAIN
            valueFrom:
              configMapKeyRef:
                name: api-web-config
                key: cluster-domain
          - name: KEL_IDENTITY_URL
            valueFrom:
              configMapKeyRef:
                name: api-web-config
                key: identity-url
          - name: KEL_BLOBSTORE_BACKEND
            valueFrom:
              configMapKeyRef:
                name: api-web-config
                key: blobstore-backend
          - name: KEL_BLOBSTORE_BUCKET
            valueFrom:
              configMapKeyRef:
                name: api-web-config
                key: blobstore-bucket
          - name: KEL_BLOBSTORE_SERVICE_ACCOUNT
            valueFrom:
              secretKeyRef:
                name: api-web-secrets
                key: blobstore-service-account
        ports:
          - containerPort: 8000
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 8000
            httpHeaders:
              - name: Host
                value: "{{ cluster.config["layer-1"].api.host }}"
          initialDelaySeconds: 30
          timeoutSeconds: 1
      nodeSelector:
        kelproject.com/node-kind: node-1x

---

apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: api-web-secrets
  namespace: kel-system
data:
  database-url: {{ b64("postgresql://%s:%s@api-database.kel-system/%s"|format(cluster.config["layer-1"].api.database.username, cluster.config["layer-1"].api.database.password, cluster.config["layer-1"].api.database.name)) }}
  redis-url: {{ b64("redis://api-cache.kel-system/0") }}
  blobstore-service-account: {{ b64(cluster.config["layer-1"]["blobstore-service-account"]) }}

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: api-web
  namespace: kel-system
spec:
  rules:
    - host: {{ cluster.config["layer-1"].api.host }}
      http:
        paths:
        - backend:
            serviceName: api-web
            servicePort: 80
          path: /
