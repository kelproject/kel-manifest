apiVersion: v1
kind: Service
metadata:
  name: router
  namespace: kel-system
  labels:
    {{ cluster.config["managed-by"] }}/name: router
    {{ cluster.config["managed-by"] }}/cluster-service: "true"
spec:
  type: NodePort
  selector:
    {{ cluster.config["managed-by"] }}/name: router{% if cluster.router_ip %}
  externalIPs:
    - "{{ cluster.router_ip }}"
{% endif %}
  ports:
    - name: router-http
      nodePort: 30556
      port: 80
      protocol: TCP
      targetPort: 8000
    - name: router-https
      nodePort: 32361
      port: 443
      protocol: TCP
      targetPort: 8443

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: router
  namespace: kel-system
  labels:
    {{ cluster.config["managed-by"] }}/name: router
    version: {{ version }}
spec:
  replicas: {{ replicas }}
  selector:
    matchLabels:
      {{ cluster.config["managed-by"] }}/name: router
  template:
    metadata:
      labels:
        {{ cluster.config["managed-by"] }}/name: router
        version: {{ version }}
    spec:
      containers:
        - name: router
          image: {{ image }}
          imagePullPolicy: IfNotPresent
          args:
            - bin/router
            - -data-store=kubernetes
            - -tls-cert=/etc/router/fallback-certificate-pem
            - -tls-key=/etc/router/fallback-key-pem
          env:
            - name: BUNDLE_URL
              value: https://storage.googleapis.com/release.kelproject.com/bundles/router/router-{{ bundle }}.tgz
          resources:
            limits:
              cpu: 100m
              memory: 476Mi
          ports:
            - containerPort: 8000
              name: router-http
              protocol: TCP
            - containerPort: 8443
              name: router-https
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/router
              name: router-conf
              readOnly: true
      volumes:
        - name: router-conf
          secret:
            secretName: router-conf
      nodeSelector:
        {{ cluster.config["managed-by"] }}/node-kind: node-1x

---

apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: router-conf
  namespace: kel-system
data:
  fallback-certificate-pem: "{{ pem("router-fallback", raw=True) }}"
  fallback-key-pem: "{{ pem("router-fallback-key") }}"
