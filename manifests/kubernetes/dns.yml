apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: KubeDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.3.0.10
  ports:
    - name: dns
      port: 53
      protocol: UDP
    - name: dns-tcp
      port: 53
      protocol: TCP
  selector:
    k8s-app: kube-dns

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kube-dns-v9
  namespace: kube-system
  labels:
    k8s-app: kube-dns
    version: v9
    kubernetes.io/cluster-service: "true"
spec:
  replicas: 1
  selector:
    k8s-app: kube-dns
    version: v9
  template:
    metadata:
      labels:
        k8s-app: kube-dns
        version: v9
        kubernetes.io/cluster-service: "true"
    spec:
      containers:
        - name: etcd
          image: {{ image.etcd }}
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
          command:
            - /usr/local/bin/etcd
            - -data-dir
            - /var/etcd/data
            - -listen-client-urls
            - http://127.0.0.1:2379,http://127.0.0.1:4001
            - -advertise-client-urls
            - http://127.0.0.1:2379,http://127.0.0.1:4001
            - -initial-cluster-token
            - skydns-etcd
          volumeMounts:
          - mountPath: /var/etcd/data
            name: etcd-storage
        - name: kube2sky
          image: {{ image.kube2sky }}
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
          args:
            # command = "/kube2sky"
            - -domain=cluster.local
        - name: skydns
          image: {{ image.skydns }}
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
          args:
            # command = "/skydns"
            - -machines=http://127.0.0.1:4001
            - -addr=0.0.0.0:53
            - -ns-rotate=false
            - -domain=cluster.local.
          ports:
            - containerPort: 53
              name: dns
              protocol: UDP
            - containerPort: 53
              name: dns-tcp
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 1
            timeoutSeconds: 5
        - name: healthz
          image: gcr.io/google_containers/exechealthz:1.0
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 10m
              memory: 20Mi
          args:
            - -cmd=nslookup kubernetes.default.svc.cluster.local localhost >/dev/null
            - -port=8080
          ports:
            - containerPort: 8080
              protocol: TCP
      dnsPolicy: Default
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: etcd-storage
